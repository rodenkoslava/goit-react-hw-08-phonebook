{"version":3,"file":"static/js/144.34aaf393.chunk.js","mappings":"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","sources":["components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.styled.js","redux/contacts/selectors.js","components/ContactList/ContactList.js","components/ContactEntryForm/ContactEntryForm.styled.js","components/ContactEntryForm/ContactEntryForm.js","components/SearchFilter/SearchFilter.styled.js","components/SearchFilter/SearchFilter.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledContactListItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  p {\n    margin: 0;\n    font-size: 32px;\n    color: #fff;\n    transition: color 0.3s ease-in-out;\n  }\n\n  span {\n    margin-top: 5px;\n    font-size: 24px;\n    color: blueviolet;\n  }\n\n  &:hover,\n  &:focus {\n    p {\n      color: black;\n    }\n  }\n`;\n","import React from 'react';\nimport { Typography, Box } from '@mui/material';\nimport { StyledContactListItem } from './ContactListItem.styled';\n\nexport const ContactListItem = ({ contact }) => {\n  return (\n    <StyledContactListItem>\n      <Typography variant=\"body1\" component=\"p\">\n        {contact.name}:\n      </Typography>\n      <Box color=\"blueviolet\">\n        <Typography variant=\"body1\" component=\"span\">\n          {contact.number}\n        </Typography>\n      </Box>\n    </StyledContactListItem>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledContactList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin: auto;\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 20px;\n  justify-content: space-around;\n`;\n\nexport const StyledContactItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 200px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  transition: background-color 0.3s ease-in-out;\n  background: rgba(30, 30, 30, 0.2);\n  border-radius: 16px;\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(6.6px);\n  -webkit-backdrop-filter: blur(6.6px);\n  border: 1px solid rgba(103, 74, 74, 0.33);\n\n  &:hover {\n    background-color: #f0f0f0;\n  }\n`;\n\nexport const StyledContactInfo = styled.div`\n  color: #fff;\n  text-align: center;\n\n  p {\n    font-size: 18px;\n    margin: 0;\n  }\n\n  span {\n    font-size: 16px;\n  }\n`;\n\nexport const StyledDeleteButton = styled.button`\n  background-color: transparent;\n  color: #fff;\n  padding: 5px 10px;\n  border: none;\n  width: 30px;\n  cursor: pointer;\n  border-radius: 10px;\n  transition: background-color 0.3s ease-in-out;\n  align-self: center;\n\n  &:hover,\n  &:focus {\n    background-color: rgba(255, 99, 71, 0.3);\n\n    &::before {\n      color: black;\n    }\n  }\n\n  &::before {\n    content: '\\2716';\n    font-size: 20px;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilters = state => state.filter.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilters],\n  (contacts, filter) => {\n    const result = contacts.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return result;\n  }\n);\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\nimport {\n  StyledContactList,\n  StyledContactItem,\n  StyledDeleteButton,\n} from './ContactList.styled';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from '../../redux/contacts/selectors';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contactsByFilter = useSelector(selectVisibleContacts);\n\n  const handleDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <>\n      {error && <b>Something went wrong... Try reloading the page </b>}\n      {isLoading && !error && 'Loading...'}\n      <StyledContactList>\n        {contactsByFilter.map(contact => (\n          <StyledContactItem key={contact.id}>\n            <ContactListItem contact={contact} />\n            <StyledDeleteButton onClick={() => handleDelete(contact.id)}>\n              <DeleteIcon />\n            </StyledDeleteButton>\n          </StyledContactItem>\n        ))}\n      </StyledContactList>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, ErrorMessage } from 'formik';\n\nexport const Title = styled.h1`\n  text-transform: uppercase;\n  text-align: center;\n  color: #fff;\n  font-size: 48px;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 500px;\n  margin: auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 16px;\n  background: rgba(30, 30, 30, 0.2);\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(6.6px);\n  -webkit-backdrop-filter: blur(6.6px);\n  border: 1px solid rgba(103, 74, 74, 0.33);\n  margin-bottom: 40px;\n\n  div {\n    margin-bottom: 10px;\n  }\n\n  label {\n    font-size: 36px;\n    font-weight: bold;\n    color: #fff;\n    margin-bottom: 5px;\n    text-align: center;\n    display: block;\n    width: 450px;\n  }\n\n  input {\n    padding: 10px;\n    width: 450px;\n    font-size: 20px;\n    box-sizing: border-box;\n    background-color: transparent;\n    color: white;\n  }\n\n  button {\n    background-color: #d63431;\n    color: white;\n    padding: 10px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n    width: 450px;\n  }\n\n  button:hover {\n    background-color: green;\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  color: red;\n`;\n","import * as Yup from 'yup';\nimport { Formik, Field } from 'formik';\nimport { StyledForm, Error, Title } from './ContactEntryForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\n\nexport const ContactEntryForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name is required'),\n    phone: Yup.string()\n      .matches(\n        /^\\d{3}-\\d{2}-\\d{2}$/,\n        'Phone number must be in the format \"111-11-11\"'\n      )\n      .required('Number is required'),\n  });\n\n  const initialValues = {\n    name: '',\n    phone: '',\n  };\n\n  const formatPhoneNumber = value => {\n    const phoneNumber = value.replace(/\\D/g, '');\n\n    if (phoneNumber.length <= 8) {\n      return phoneNumber.replace(/(\\d{3})(\\d{0,2})(\\d{0,2})/, '$1-$2-$3');\n    } else {\n      return phoneNumber.replace(/(\\d{3})(\\d{2})(\\d{2})/, '$1-$2-$3');\n    }\n  };\n  const handlePhoneChange = (e, setFieldValue) => {\n    const { value } = e.target;\n    const formattedValue = formatPhoneNumber(value);\n    setFieldValue('phone', formattedValue);\n  };\n\n  const handleAddContact = newContact => {\n    const isNameRepeat = contacts.some(\n      item => item.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n    if (isNameRepeat) {\n      alert(`${newContact.name} \nalready in contacts.`);\n      return;\n    }\n    dispatch(addContact({ name: newContact.name, number: newContact.phone }));\n  };\n\n  return (\n    <>\n      <Title>YOUR CONTACTS</Title>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, actions) => {\n          handleAddContact(values);\n          actions.resetForm();\n        }}\n      >\n        {({ values, setFieldValue }) => (\n          <StyledForm>\n            <div>\n              <label htmlFor=\"name\">Name:</label>\n              <Field type=\"text\" id=\"name\" name=\"name\" />\n              <Error name=\"name\" component=\"div\" />\n            </div>\n            <div>\n              <label htmlFor=\"phone\">Number:</label>\n              <Field\n                type=\"text\"\n                id=\"phone\"\n                name=\"phone\"\n                onChange={e => handlePhoneChange(e, setFieldValue)}\n                value={values.phone}\n              />\n              <Error name=\"phone\" component=\"div\" />\n            </div>\n            <button type=\"submit\">Add contact</button>\n          </StyledForm>\n        )}\n      </Formik>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactTitle = styled.h2`\n  text-align: center;\n  color: #fff;\n`;\n\nexport const StyledSearchFilter = styled.div`\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n\n  h2 {\n    margin-bottom: 5px;\n    font-size: 18px;\n    text-align: center;\n    color: #fff;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  padding: 10px;\n  font-size: 16px;\n  width: 80%;\n  margin: auto;\n  margin-bottom: 20px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  outline: none;\n  color: #fff;\n  background-color: rgba(255, 255, 255, 0.1);\n\n  &:focus {\n    border-color: #d63431;\n  }\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  StyledSearchFilter,\n  ContactTitle,\n  StyledInput,\n} from './SearchFilter.styled';\nimport { changeFilter } from '../../redux/contacts/filterSlice';\n\nexport const SearchFilter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <ContactTitle>Contacts</ContactTitle>\n      <StyledSearchFilter>\n        <h2>Search contacts</h2>\n        <StyledInput\n          type=\"text\"\n          placeholder=\"Search...\"\n          onChange={e => dispatch(changeFilter(e.target.value))}\n        />\n      </StyledSearchFilter>\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactEntryForm } from '../components/ContactEntryForm/ContactEntryForm';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectIsLoading } from '../redux/contacts/selectors';\nimport { SearchFilter } from 'components/SearchFilter/SearchFilter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div>\n        <title>Your Contacts</title>\n      </div>\n      <ContactEntryForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <SearchFilter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["StyledContactListItem","styled","_templateObject","_taggedTemplateLiteral","ContactListItem","_ref","contact","_jsxs","children","Typography","variant","component","name","_jsx","Box","color","number","StyledContactList","StyledContactItem","_templateObject2","StyledDeleteButton","_templateObject3","_templateObject4","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","item","toLowerCase","includes","ContactList","dispatch","useDispatch","useSelector","contactsByFilter","_Fragment","map","onClick","id","deleteContact","DeleteIcon","Title","StyledForm","Form","Error","ErrorMessage","ContactEntryForm","validationSchema","Yup","required","phone","matches","Formik","initialValues","onSubmit","values","actions","newContact","some","alert","concat","addContact","resetForm","setFieldValue","htmlFor","Field","type","onChange","e","formattedValue","value","phoneNumber","replace","length","formatPhoneNumber","target","handlePhoneChange","ContactTitle","StyledSearchFilter","StyledInput","SearchFilter","placeholder","changeFilter","Contacts","useEffect","fetchContacts"],"sourceRoot":""}